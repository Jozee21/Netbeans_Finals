/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package POS;

import java.awt.Component;
import java.sql.*;
import java.util.logging.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.Vector;



import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.PreparedStatement;
import java.sql.SQLException;
/**
 *
 * @author Jose Tapic
 */
public class POSmainwindow extends javax.swing.JFrame {
    Connection con = null;
    PreparedStatement pst;
    ResultSet rs;
    private int discountedPrice;
    private int originalPrice;

    
    
    public POSmainwindow() {
        initComponents();
        con = ConnectionPOS.mycon();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        TabPane = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        Order1Abutton = new javax.swing.JButton();
        Order1Bbutton = new javax.swing.JButton();
        Order1Cbutton = new javax.swing.JButton();
        Order1Dbutton = new javax.swing.JButton();
        Order1Ebutton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        Order2Abutton = new javax.swing.JButton();
        Order2Bbutton = new javax.swing.JButton();
        Order2Dbutton = new javax.swing.JButton();
        Order2Cbutton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        Order3Abutton = new javax.swing.JButton();
        Order3Bbutton = new javax.swing.JButton();
        Order3Cbutton = new javax.swing.JButton();
        Order3Dbutton = new javax.swing.JButton();
        Order3Ebutton = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        Order3Fbutton = new javax.swing.JButton();
        jLabel34 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        Order4Abutton = new javax.swing.JButton();
        Order4Bbutton = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        RemoveOrderButton = new javax.swing.JButton();
        ConfirmOrderButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        viewCartTable = new javax.swing.JTable();
        jPanel10 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        PasswordAd = new javax.swing.JPasswordField();
        jScrollPane2 = new javax.swing.JScrollPane();
        UsernameAd = new javax.swing.JTextPane();
        jLabel7 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        LoginButtonAd = new javax.swing.JButton();
        ClearButton = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel13.setBackground(new java.awt.Color(84, 44, 36));

        jLabel1.setFont(new java.awt.Font("Rockwell", 0, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Grub and Pub");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(276, 276, 276))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        TabPane.setBackground(new java.awt.Color(255, 255, 255));

        jPanel4.setBackground(new java.awt.Color(116, 111, 113));

        Order1Abutton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/POS/Hamburger1.jpg"))); // NOI18N
        Order1Abutton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        Order1Abutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Order1AbuttonMouseClicked(evt);
            }
        });
        Order1Abutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Order1AbuttonActionPerformed(evt);
            }
        });

        Order1Bbutton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/POS/Hamburger2.jpg"))); // NOI18N
        Order1Bbutton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        Order1Bbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Order1BbuttonActionPerformed(evt);
            }
        });

        Order1Cbutton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/POS/Hamburger3.jpg"))); // NOI18N
        Order1Cbutton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        Order1Cbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Order1CbuttonActionPerformed(evt);
            }
        });

        Order1Dbutton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/POS/Hamburger4.jpg"))); // NOI18N
        Order1Dbutton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        Order1Dbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Order1DbuttonActionPerformed(evt);
            }
        });

        Order1Ebutton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/POS/Hamburger5.jpg"))); // NOI18N
        Order1Ebutton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        Order1Ebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Order1EbuttonActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Rockwell", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Chick & Burger (chicken fillet and cheeseburger)");

        jLabel3.setFont(new java.awt.Font("Rockwell", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Baracha (w/ bacon and siracha mayo)");

        jLabel4.setFont(new java.awt.Font("Rockwell", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Keto (bacon cheeseburger in egg bun)");

        jLabel5.setFont(new java.awt.Font("Rockwell", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Board Slide (Egg wrapped cheeseburger)");

        jLabel6.setFont(new java.awt.Font("Rockwell", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Fakie Sandwich (double down chicken, cheese, bacon, no burger)");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(Order1Abutton, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Order1Bbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel3)))
                .addGap(198, 198, 198)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(Order1Cbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(81, 81, 81))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(304, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(Order1Dbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(209, 209, 209)
                        .addComponent(Order1Ebutton, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(239, 239, 239))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(125, 125, 125)
                        .addComponent(jLabel2)
                        .addGap(225, 225, 225))))
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addGap(81, 81, 81)
                    .addComponent(jLabel5)
                    .addContainerGap(998, Short.MAX_VALUE)))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Order1Bbutton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Order1Abutton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Order1Cbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Order1Dbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Order1Ebutton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(461, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addGap(258, 258, 258)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(718, Short.MAX_VALUE)))
        );

        TabPane.addTab("Burgers", jPanel4);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jPanel7.setBackground(new java.awt.Color(116, 111, 113));

        Order2Abutton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/POS/Sandwich1.jpg"))); // NOI18N
        Order2Abutton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        Order2Abutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Order2AbuttonActionPerformed(evt);
            }
        });

        Order2Bbutton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/POS/Sandwich2.jpg"))); // NOI18N
        Order2Bbutton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        Order2Bbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Order2BbuttonActionPerformed(evt);
            }
        });

        Order2Dbutton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/POS/Sandwich4.jpg"))); // NOI18N
        Order2Dbutton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        Order2Dbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Order2DbuttonActionPerformed(evt);
            }
        });

        Order2Cbutton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/POS/Sandwich3.jpg"))); // NOI18N
        Order2Cbutton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        Order2Cbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Order2CbuttonActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Rockwell", 0, 12)); // NOI18N
        jLabel8.setText("Bacon & Egg");

        jLabel9.setFont(new java.awt.Font("Rockwell", 0, 12)); // NOI18N
        jLabel9.setText("Spam & Egg");

        jLabel10.setFont(new java.awt.Font("Rockwell", 0, 12)); // NOI18N
        jLabel10.setText("Chicken Sandwich");

        jLabel11.setFont(new java.awt.Font("Rockwell", 0, 12)); // NOI18N
        jLabel11.setText("Ham & Egg");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(339, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(jLabel11)
                        .addGap(320, 320, 320)
                        .addComponent(jLabel9))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jLabel10)
                        .addGap(292, 292, 292)
                        .addComponent(jLabel8))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Order2Abutton, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Order2Cbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(134, 134, 134)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Order2Dbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Order2Bbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(276, 276, 276))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(149, 149, 149)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Order2Abutton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Order2Bbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Order2Cbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Order2Dbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(267, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1314, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 65, Short.MAX_VALUE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1003, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 69, Short.MAX_VALUE)))
        );

        TabPane.addTab("Sandwiches", jPanel3);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jPanel11.setBackground(new java.awt.Color(116, 111, 113));

        Order3Abutton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/POS/add1.jpg"))); // NOI18N
        Order3Abutton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        Order3Abutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Order3AbuttonActionPerformed(evt);
            }
        });

        Order3Bbutton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/POS/add2.jpg"))); // NOI18N
        Order3Bbutton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        Order3Bbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Order3BbuttonActionPerformed(evt);
            }
        });

        Order3Cbutton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/POS/add3.jpg"))); // NOI18N
        Order3Cbutton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        Order3Cbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Order3CbuttonActionPerformed(evt);
            }
        });

        Order3Dbutton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/POS/add4.jpg"))); // NOI18N
        Order3Dbutton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        Order3Dbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Order3DbuttonActionPerformed(evt);
            }
        });

        Order3Ebutton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/POS/add5.jpg"))); // NOI18N
        Order3Ebutton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        Order3Ebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Order3EbuttonActionPerformed(evt);
            }
        });

        jLabel29.setFont(new java.awt.Font("Rockwell", 0, 12)); // NOI18N
        jLabel29.setText("BBQ Sauce");

        jLabel30.setFont(new java.awt.Font("Rockwell", 0, 12)); // NOI18N
        jLabel30.setText("Cheese");

        jLabel31.setFont(new java.awt.Font("Rockwell", 0, 12)); // NOI18N
        jLabel31.setText("Egg");

        jLabel32.setFont(new java.awt.Font("Rockwell", 0, 12)); // NOI18N
        jLabel32.setText("Bacon");

        jLabel33.setFont(new java.awt.Font("Rockwell", 0, 12)); // NOI18N
        jLabel33.setText("Ham");

        Order3Fbutton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/POS/add6.jpg"))); // NOI18N
        Order3Fbutton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        Order3Fbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Order3FbuttonActionPerformed(evt);
            }
        });

        jLabel34.setFont(new java.awt.Font("Rockwell", 0, 12)); // NOI18N
        jLabel34.setText("Spam");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(Order3Dbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(568, 568, 568))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Order3Abutton, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addGap(107, 107, 107)
                                .addComponent(jLabel32)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 210, Short.MAX_VALUE)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(Order3Ebutton, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Order3Bbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(180, 180, 180))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                                .addComponent(jLabel30)
                                .addGap(281, 281, 281)))))
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                        .addComponent(Order3Cbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(Order3Fbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel31)
                        .addGap(189, 189, 189))))
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(180, 180, 180)
                .addComponent(jLabel33)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel34)
                .addGap(383, 383, 383)
                .addComponent(jLabel29)
                .addGap(163, 163, 163))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Order3Abutton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Order3Bbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Order3Cbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Order3Dbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Order3Ebutton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Order3Fbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(436, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1314, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                    .addContainerGap(16, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(16, Short.MAX_VALUE)))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1003, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        TabPane.addTab("Add-ons", jPanel5);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        jPanel9.setBackground(new java.awt.Color(116, 111, 113));

        Order4Abutton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/POS/Fries1.jpg"))); // NOI18N
        Order4Abutton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        Order4Abutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Order4AbuttonActionPerformed(evt);
            }
        });

        Order4Bbutton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/POS/Fries2.jpg"))); // NOI18N
        Order4Bbutton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        Order4Bbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Order4BbuttonActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Rockwell", 0, 12)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Grand Fries");

        jLabel20.setFont(new java.awt.Font("Rockwell", 0, 12)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("First Fries");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(285, 285, 285)
                .addComponent(Order4Abutton, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 316, Short.MAX_VALUE)
                .addComponent(Order4Bbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(207, 207, 207))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addGap(379, 379, 379)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel18)
                .addGap(292, 292, 292))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Order4Bbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Order4Abutton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(653, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1314, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1003, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel6Layout.createSequentialGroup()
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        TabPane.addTab("Fries", jPanel6);

        jPanel8.setBackground(new java.awt.Color(116, 111, 113));

        RemoveOrderButton.setText("Remove Order");
        RemoveOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveOrderButtonActionPerformed(evt);
            }
        });

        ConfirmOrderButton.setText("Confirm Order");
        ConfirmOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmOrderButtonActionPerformed(evt);
            }
        });

        viewCartTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Item Name", "Amount", "Original Price", "Discounted Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        viewCartTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(viewCartTable);
        if (viewCartTable.getColumnModel().getColumnCount() > 0) {
            viewCartTable.getColumnModel().getColumn(0).setResizable(false);
            viewCartTable.getColumnModel().getColumn(1).setResizable(false);
            viewCartTable.getColumnModel().getColumn(2).setResizable(false);
            viewCartTable.getColumnModel().getColumn(3).setResizable(false);
            viewCartTable.getColumnModel().getColumn(4).setResizable(false);
        }

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(471, 471, 471)
                .addComponent(ConfirmOrderButton)
                .addGap(36, 36, 36)
                .addComponent(RemoveOrderButton)
                .addContainerGap(594, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ConfirmOrderButton)
                    .addComponent(RemoveOrderButton))
                .addContainerGap(425, Short.MAX_VALUE))
        );

        TabPane.addTab("View Cart", jPanel8);

        jPanel12.setBackground(new java.awt.Color(116, 111, 113));

        jScrollPane2.setViewportView(UsernameAd);

        jLabel7.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Password:");

        jLabel12.setFont(new java.awt.Font("Rockwell", 0, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Username:");

        LoginButtonAd.setText("Log in");
        LoginButtonAd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginButtonAdActionPerformed(evt);
            }
        });

        ClearButton.setText("Clear");
        ClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearButtonActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Rockwell", 0, 24)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Admin Control ");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(356, 356, 356)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(LoginButtonAd, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(299, 299, 299)
                        .addComponent(ClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGap(237, 237, 237)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PasswordAd, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(247, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel13)
                .addGap(512, 512, 512))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(155, 155, 155)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE))
                .addGap(29, 29, 29)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PasswordAd, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(69, 69, 69)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LoginButtonAd, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(409, 409, 409))
        );

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        TabPane.addTab("For Admins", jPanel10);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(TabPane)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TabPane)
                .addGap(77, 77, 77))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearButtonActionPerformed
        // TODO add your handling code here:
        UsernameAd.setText("");
        PasswordAd.setText("");
    }//GEN-LAST:event_ClearButtonActionPerformed

    private void LoginButtonAdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginButtonAdActionPerformed
        try {
            // TODO add your handling code here:
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/grubbitespossys","root","");

            String Username = UsernameAd.getText();
            String Password = PasswordAd.getText();

            String sql = "SELECT * FROM `login and password` WHERE Username = ? AND Password = ? ";

            pst = con.prepareStatement(sql);

            pst.setString(1, Username);
            pst.setString(2, Password);

            rs = pst.executeQuery();

            if(rs.next()){

                this.dispose();

                POSAdminWindow ho = new POSAdminWindow();
                ho.setVisible(true);

            }else {

                JOptionPane.showMessageDialog(rootPane, "UserName Or Password is Wrong");
            }

        } catch (SQLException ex) {
            Logger.getLogger(POSmainwindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_LoginButtonAdActionPerformed

    private void Order3FbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Order3FbuttonActionPerformed
        // TODO add your handling code here:
        Integer[] options = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11};
        Integer selectedValue = (Integer) JOptionPane.showInputDialog(null, "How many servings:", "Servings", JOptionPane.QUESTION_MESSAGE, null, options, options[2]);

        if (selectedValue != null) {
            String selectedValueStr = Integer.toString(selectedValue);

            try {
                pst = con.prepareStatement("SELECT * FROM tablesales2 WHERE ID = '3F'");
                ResultSet resultSet = pst.executeQuery();

                DefaultTableModel viewCartTableModel = (DefaultTableModel) viewCartTable.getModel();

                if (resultSet.next()) {
                    String itemName = resultSet.getString("Item Name");
                    String originalPrice = resultSet.getString("Original Price");
                    String discountedPrice = resultSet.getString("Discounted Price");
                    viewCartTableModel.addRow(new Object[]{"3F", itemName, selectedValueStr, originalPrice, discountedPrice});
                    viewCartTableModel.fireTableDataChanged(); // Notify the table about the changes
                    JOptionPane.showMessageDialog(this, "Amount Saved");
                } else {
                    JOptionPane.showMessageDialog(this, "No item with ID '3F' found in the database.");
                }
            } catch (SQLException ex) {
                Logger.getLogger(POSmainwindow.class.getName()).log(Level.SEVERE, null, ex);
                // Add additional error handling or notification logic here
            }
        } else {
            // User canceled or closed the dialog
            // Handle this case if needed
        }
    }//GEN-LAST:event_Order3FbuttonActionPerformed

    private void Order3EbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Order3EbuttonActionPerformed
        // TODO add your handling code here:
        Integer[] options = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11};
        Integer selectedValue = (Integer) JOptionPane.showInputDialog(null, "How many servings:", "Servings", JOptionPane.QUESTION_MESSAGE, null, options, options[2]);

        if (selectedValue != null) {
            String selectedValueStr = Integer.toString(selectedValue);

            try {
                pst = con.prepareStatement("SELECT * FROM tablesales2 WHERE ID = '3E'");
                ResultSet resultSet = pst.executeQuery();

                DefaultTableModel viewCartTableModel = (DefaultTableModel) viewCartTable.getModel();

                if (resultSet.next()) {
                    String itemName = resultSet.getString("Item Name");
                    String originalPrice = resultSet.getString("Original Price");
                    String discountedPrice = resultSet.getString("Discounted Price");
                    viewCartTableModel.addRow(new Object[]{"3E", itemName, selectedValueStr, originalPrice, discountedPrice});
                    viewCartTableModel.fireTableDataChanged(); // Notify the table about the changes
                    JOptionPane.showMessageDialog(this, "Amount Saved");
                } else {
                    JOptionPane.showMessageDialog(this, "No item with ID '3E' found in the database.");
                }
            } catch (SQLException ex) {
                Logger.getLogger(POSmainwindow.class.getName()).log(Level.SEVERE, null, ex);
                // Add additional error handling or notification logic here
            }
        } else {
            // User canceled or closed the dialog
            // Handle this case if needed
        }
    }//GEN-LAST:event_Order3EbuttonActionPerformed

    private void Order3DbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Order3DbuttonActionPerformed
        // TODO add your handling code here:
        Integer[] options = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11};
        Integer selectedValue = (Integer) JOptionPane.showInputDialog(null, "How many servings:", "Servings", JOptionPane.QUESTION_MESSAGE, null, options, options[2]);

        if (selectedValue != null) {
            String selectedValueStr = Integer.toString(selectedValue);

            try {
                pst = con.prepareStatement("SELECT * FROM tablesales2 WHERE ID = '3D'");
                ResultSet resultSet = pst.executeQuery();

                DefaultTableModel viewCartTableModel = (DefaultTableModel) viewCartTable.getModel();

                if (resultSet.next()) {
                    String itemName = resultSet.getString("Item Name");
                    String originalPrice = resultSet.getString("Original Price");
                    String discountedPrice = resultSet.getString("Discounted Price");
                    viewCartTableModel.addRow(new Object[]{"3D", itemName, selectedValueStr, originalPrice, discountedPrice});
                    viewCartTableModel.fireTableDataChanged(); // Notify the table about the changes
                    JOptionPane.showMessageDialog(this, "Amount Saved");
                } else {
                    JOptionPane.showMessageDialog(this, "No item with ID '3D' found in the database.");
                }
            } catch (SQLException ex) {
                Logger.getLogger(POSmainwindow.class.getName()).log(Level.SEVERE, null, ex);
                // Add additional error handling or notification logic here
            }
        } else {
            // User canceled or closed the dialog
            // Handle this case if needed
        }
    }//GEN-LAST:event_Order3DbuttonActionPerformed

    private void Order3CbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Order3CbuttonActionPerformed
        // TODO add your handling code here:
        Integer[] options = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11};
        Integer selectedValue = (Integer) JOptionPane.showInputDialog(null, "How many servings:", "Servings", JOptionPane.QUESTION_MESSAGE, null, options, options[2]);

        if (selectedValue != null) {
            String selectedValueStr = Integer.toString(selectedValue);

            try {
                pst = con.prepareStatement("SELECT * FROM tablesales2 WHERE ID = '3C'");
                ResultSet resultSet = pst.executeQuery();

                DefaultTableModel viewCartTableModel = (DefaultTableModel) viewCartTable.getModel();

                if (resultSet.next()) {
                    String itemName = resultSet.getString("Item Name");
                    String originalPrice = resultSet.getString("Original Price");
                    String discountedPrice = resultSet.getString("Discounted Price");
                    viewCartTableModel.addRow(new Object[]{"3C", itemName, selectedValueStr, originalPrice, discountedPrice});
                    viewCartTableModel.fireTableDataChanged(); // Notify the table about the changes
                    JOptionPane.showMessageDialog(this, "Amount Saved");
                } else {
                    JOptionPane.showMessageDialog(this, "No item with ID '3C' found in the database.");
                }
            } catch (SQLException ex) {
                Logger.getLogger(POSmainwindow.class.getName()).log(Level.SEVERE, null, ex);
                // Add additional error handling or notification logic here
            }
        } else {
            // User canceled or closed the dialog
            // Handle this case if needed
        }
    }//GEN-LAST:event_Order3CbuttonActionPerformed

    private void Order3BbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Order3BbuttonActionPerformed
        // TODO add your handling code here:
        Integer[] options = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11};
        Integer selectedValue = (Integer) JOptionPane.showInputDialog(null, "How many servings:", "Servings", JOptionPane.QUESTION_MESSAGE, null, options, options[2]);

        if (selectedValue != null) {
            String selectedValueStr = Integer.toString(selectedValue);

            try {
                pst = con.prepareStatement("SELECT * FROM tablesales2 WHERE ID = '3B'");
                ResultSet resultSet = pst.executeQuery();

                DefaultTableModel viewCartTableModel = (DefaultTableModel) viewCartTable.getModel();

                if (resultSet.next()) {
                    String itemName = resultSet.getString("Item Name");
                    String originalPrice = resultSet.getString("Original Price");
                    String discountedPrice = resultSet.getString("Discounted Price");
                    viewCartTableModel.addRow(new Object[]{"3B", itemName, selectedValueStr, originalPrice, discountedPrice});
                    viewCartTableModel.fireTableDataChanged(); // Notify the table about the changes
                    JOptionPane.showMessageDialog(this, "Amount Saved");
                } else {
                    JOptionPane.showMessageDialog(this, "No item with ID '3B' found in the database.");
                }
            } catch (SQLException ex) {
                Logger.getLogger(POSmainwindow.class.getName()).log(Level.SEVERE, null, ex);
                // Add additional error handling or notification logic here
            }
        } else {
            // User canceled or closed the dialog
            // Handle this case if needed
        }
    }//GEN-LAST:event_Order3BbuttonActionPerformed

    private void Order3AbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Order3AbuttonActionPerformed
        // TODO add your handling code here:
        Integer[] options = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11};
        Integer selectedValue = (Integer) JOptionPane.showInputDialog(null, "How many servings:", "Servings", JOptionPane.QUESTION_MESSAGE, null, options, options[2]);

        if (selectedValue != null) {
            String selectedValueStr = Integer.toString(selectedValue);

            try {
                pst = con.prepareStatement("SELECT * FROM tablesales2 WHERE ID = '3A'");
                ResultSet resultSet = pst.executeQuery();

                DefaultTableModel viewCartTableModel = (DefaultTableModel) viewCartTable.getModel();

                if (resultSet.next()) {
                    String itemName = resultSet.getString("Item Name");
                    String originalPrice = resultSet.getString("Original Price");
                    String discountedPrice = resultSet.getString("Discounted Price");
                    viewCartTableModel.addRow(new Object[]{"3A", itemName, selectedValueStr, originalPrice, discountedPrice});
                    viewCartTableModel.fireTableDataChanged(); // Notify the table about the changes
                    JOptionPane.showMessageDialog(this, "Amount Saved");
                } else {
                    JOptionPane.showMessageDialog(this, "No item with ID '3A' found in the database.");
                }
            } catch (SQLException ex) {
                Logger.getLogger(POSmainwindow.class.getName()).log(Level.SEVERE, null, ex);
                // Add additional error handling or notification logic here
            }
        } else {
            // User canceled or closed the dialog
            // Handle this case if needed
        }
    }//GEN-LAST:event_Order3AbuttonActionPerformed

    private void ConfirmOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmOrderButtonActionPerformed
        // TODO add your handling code here:

        // Step 1: Ask if the user is a senior citizen
        int seniorOption = JOptionPane.showConfirmDialog(null, "Are you a senior citizen?", "Confirmation", JOptionPane.YES_NO_OPTION);
        boolean isSenior = (seniorOption == JOptionPane.YES_OPTION);

        try {
            // Step 2: Calculate the total payment for the user's order + the amount
            double totalPayment = 0.0;

            DefaultTableModel viewCartTableModel = (DefaultTableModel) viewCartTable.getModel();
            int rowCount = viewCartTableModel.getRowCount();

            for (int i = 0; i < rowCount; i++) {
                String itemID = (String) viewCartTableModel.getValueAt(i, 0);
                int amount = Integer.parseInt((String) viewCartTableModel.getValueAt(i, 2));
                double originalPrice = Double.parseDouble((String) viewCartTableModel.getValueAt(i, 3));
                double discountedPrice = Double.parseDouble((String) viewCartTableModel.getValueAt(i, 4));

                double itemTotal = isSenior ? (discountedPrice * amount) : (originalPrice * amount);
                totalPayment += itemTotal;

                double Total_Income = isSenior ? (amount * discountedPrice) : (amount * originalPrice);

                // Update the Total Income in the database
                Connection con = ConnectionPOS.mycon();
                PreparedStatement pst = con.prepareStatement("UPDATE tablesales2 SET `Total Income` = `Total Income` + ? WHERE ID = ?");
                pst.setDouble(1, Total_Income);
                pst.setString(2, itemID);
                pst.executeUpdate();

            }

            for (int i = 0; i < rowCount; i++) {
                Connection con = ConnectionPOS.mycon();
                String itemID = (String) viewCartTableModel.getValueAt(i, 0);
                double sale = Double.parseDouble((String) viewCartTableModel.getValueAt(i, 2));

                PreparedStatement pstSales = con.prepareStatement("UPDATE tablesales2 SET Sales = Sales + ? WHERE ID = ?");
                pstSales.setDouble(1, sale);
                pstSales.setString(2, itemID);
                pstSales.executeUpdate();
            }

            // Step 3: Show the total payment and ask for confirmation
            int confirmOption = JOptionPane.showConfirmDialog(null, "Total Payment: " + totalPayment + "\nAre you sure?", "Confirmation", JOptionPane.YES_NO_OPTION);
            boolean isConfirmed = (confirmOption == JOptionPane.YES_OPTION);

            if (isConfirmed) {
                // Step 4: Remove all rows from the View Cart table model
                viewCartTableModel.setRowCount(0);
                // Step 5: Show the final message
                JOptionPane.showMessageDialog(null, "Your order has been paid.");

            } else {
                // User chose not to confirm, continue with the services
            }
        } catch (SQLException ex) {
            Logger.getLogger(POSmainwindow.class.getName()).log(Level.SEVERE, null, ex);
            // Add additional error handling or notification logic here
        }

    }//GEN-LAST:event_ConfirmOrderButtonActionPerformed

    private void RemoveOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveOrderButtonActionPerformed
        // TODO add your handling code here:

        int selectedRowIndex = viewCartTable.getSelectedRow();

        if (selectedRowIndex != -1) {
            String itemID = (String) viewCartTable.getValueAt(selectedRowIndex, 0);

            try {
                // Remove the selected row from the View Cart table
                DefaultTableModel viewCartTableModel = (DefaultTableModel) viewCartTable.getModel();
                viewCartTableModel.removeRow(selectedRowIndex);

                // Reset the amount value to 0 for the removed item in the database
                pst = con.prepareStatement("UPDATE tablesales2 SET Amount = '0' WHERE ID = ?");
                pst.setString(1, itemID);
                pst.executeUpdate();

                // Update the table model in the "View Cart" tab
                updateViewCartTableModel();

                JOptionPane.showMessageDialog(null, "Order removed successfully.");
            } catch (SQLException ex) {
                Logger.getLogger(POSmainwindow.class.getName()).log(Level.SEVERE, null, ex);
                // Add additional error handling or notification logic here
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please select a row to remove.");
        }
    }//GEN-LAST:event_RemoveOrderButtonActionPerformed

    private void Order4BbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Order4BbuttonActionPerformed
        // TODO add your handling code here:
        Integer[] options = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11};
        Integer selectedValue = (Integer) JOptionPane.showInputDialog(null, "How many servings:", "Servings", JOptionPane.QUESTION_MESSAGE, null, options, options[2]);

        if (selectedValue != null) {
            String selectedValueStr = Integer.toString(selectedValue);

            try {
                pst = con.prepareStatement("SELECT * FROM tablesales2 WHERE ID = '4B'");
                ResultSet resultSet = pst.executeQuery();

                DefaultTableModel viewCartTableModel = (DefaultTableModel) viewCartTable.getModel();

                if (resultSet.next()) {
                    String itemName = resultSet.getString("Item Name");
                    String originalPrice = resultSet.getString("Original Price");
                    String discountedPrice = resultSet.getString("Discounted Price");
                    viewCartTableModel.addRow(new Object[]{"4B", itemName, selectedValueStr, originalPrice, discountedPrice});
                    viewCartTableModel.fireTableDataChanged(); // Notify the table about the changes
                    JOptionPane.showMessageDialog(this, "Amount Saved");
                } else {
                    JOptionPane.showMessageDialog(this, "No item with ID '4B' found in the database.");
                }
            } catch (SQLException ex) {
                Logger.getLogger(POSmainwindow.class.getName()).log(Level.SEVERE, null, ex);
                // Add additional error handling or notification logic here
            }
        } else {
            // User canceled or closed the dialog
            // Handle this case if needed
        }
    }//GEN-LAST:event_Order4BbuttonActionPerformed

    private void Order4AbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Order4AbuttonActionPerformed
        // TODO add your handling code here:
        Integer[] options = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11};
        Integer selectedValue = (Integer) JOptionPane.showInputDialog(null, "How many servings:", "Servings", JOptionPane.QUESTION_MESSAGE, null, options, options[2]);

        if (selectedValue != null) {
            String selectedValueStr = Integer.toString(selectedValue);

            try {
                pst = con.prepareStatement("SELECT * FROM tablesales2 WHERE ID = '4A'");
                ResultSet resultSet = pst.executeQuery();

                DefaultTableModel viewCartTableModel = (DefaultTableModel) viewCartTable.getModel();

                if (resultSet.next()) {
                    String itemName = resultSet.getString("Item Name");
                    String originalPrice = resultSet.getString("Original Price");
                    String discountedPrice = resultSet.getString("Discounted Price");
                    viewCartTableModel.addRow(new Object[]{"4A", itemName, selectedValueStr, originalPrice, discountedPrice});
                    viewCartTableModel.fireTableDataChanged(); // Notify the table about the changes
                    JOptionPane.showMessageDialog(this, "Amount Saved");
                } else {
                    JOptionPane.showMessageDialog(this, "No item with ID '4A' found in the database.");
                }
            } catch (SQLException ex) {
                Logger.getLogger(POSmainwindow.class.getName()).log(Level.SEVERE, null, ex);
                // Add additional error handling or notification logic here
            }
        } else {
            // User canceled or closed the dialog
            // Handle this case if needed
        }
    }//GEN-LAST:event_Order4AbuttonActionPerformed

    private void Order2CbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Order2CbuttonActionPerformed
        // TODO add your handling code here:
        Integer[] options = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11};
        Integer selectedValue = (Integer) JOptionPane.showInputDialog(null, "How many servings:", "Servings", JOptionPane.QUESTION_MESSAGE, null, options, options[2]);

        if (selectedValue != null) {
            String selectedValueStr = Integer.toString(selectedValue);

            try {
                pst = con.prepareStatement("SELECT * FROM tablesales2 WHERE ID = '2C'");
                ResultSet resultSet = pst.executeQuery();

                DefaultTableModel viewCartTableModel = (DefaultTableModel) viewCartTable.getModel();

                if (resultSet.next()) {
                    String itemName = resultSet.getString("Item Name");
                    String originalPrice = resultSet.getString("Original Price");
                    String discountedPrice = resultSet.getString("Discounted Price");
                    viewCartTableModel.addRow(new Object[]{"2C", itemName, selectedValueStr, originalPrice, discountedPrice});
                    viewCartTableModel.fireTableDataChanged(); // Notify the table about the changes
                    JOptionPane.showMessageDialog(this, "Amount Saved");
                } else {
                    JOptionPane.showMessageDialog(this, "No item with ID '2C' found in the database.");
                }
            } catch (SQLException ex) {
                Logger.getLogger(POSmainwindow.class.getName()).log(Level.SEVERE, null, ex);
                // Add additional error handling or notification logic here
            }
        } else {
            // User canceled or closed the dialog
            // Handle this case if needed
        }
    }//GEN-LAST:event_Order2CbuttonActionPerformed

    private void Order2DbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Order2DbuttonActionPerformed
        // TODO add your handling code here:
        Integer[] options = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11};
        Integer selectedValue = (Integer) JOptionPane.showInputDialog(null, "How many servings:", "Servings", JOptionPane.QUESTION_MESSAGE, null, options, options[2]);

        if (selectedValue != null) {
            String selectedValueStr = Integer.toString(selectedValue);

            try {
                pst = con.prepareStatement("SELECT * FROM tablesales2 WHERE ID = '2D'");
                ResultSet resultSet = pst.executeQuery();

                DefaultTableModel viewCartTableModel = (DefaultTableModel) viewCartTable.getModel();

                if (resultSet.next()) {
                    String itemName = resultSet.getString("Item Name");
                    String originalPrice = resultSet.getString("Original Price");
                    String discountedPrice = resultSet.getString("Discounted Price");
                    viewCartTableModel.addRow(new Object[]{"2D", itemName, selectedValueStr, originalPrice, discountedPrice});
                    viewCartTableModel.fireTableDataChanged(); // Notify the table about the changes
                    JOptionPane.showMessageDialog(this, "Amount Saved");
                } else {
                    JOptionPane.showMessageDialog(this, "No item with ID '2D' found in the database.");
                }
            } catch (SQLException ex) {
                Logger.getLogger(POSmainwindow.class.getName()).log(Level.SEVERE, null, ex);
                // Add additional error handling or notification logic here
            }
        } else {
            // User canceled or closed the dialog
            // Handle this case if needed
        }
    }//GEN-LAST:event_Order2DbuttonActionPerformed

    private void Order2BbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Order2BbuttonActionPerformed
        // TODO add your handling code here:
        Integer[] options = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11};
        Integer selectedValue = (Integer) JOptionPane.showInputDialog(null, "How many servings:", "Servings", JOptionPane.QUESTION_MESSAGE, null, options, options[2]);

        if (selectedValue != null) {
            String selectedValueStr = Integer.toString(selectedValue);

            try {
                pst = con.prepareStatement("SELECT * FROM tablesales2 WHERE ID = '2B'");
                ResultSet resultSet = pst.executeQuery();

                DefaultTableModel viewCartTableModel = (DefaultTableModel) viewCartTable.getModel();

                if (resultSet.next()) {
                    String itemName = resultSet.getString("Item Name");
                    String originalPrice = resultSet.getString("Original Price");
                    String discountedPrice = resultSet.getString("Discounted Price");
                    viewCartTableModel.addRow(new Object[]{"2B", itemName, selectedValueStr, originalPrice, discountedPrice});
                    viewCartTableModel.fireTableDataChanged(); // Notify the table about the changes
                    JOptionPane.showMessageDialog(this, "Amount Saved");
                } else {
                    JOptionPane.showMessageDialog(this, "No item with ID '2B' found in the database.");
                }
            } catch (SQLException ex) {
                Logger.getLogger(POSmainwindow.class.getName()).log(Level.SEVERE, null, ex);
                // Add additional error handling or notification logic here
            }
        } else {
            // User canceled or closed the dialog
            // Handle this case if needed
        }
    }//GEN-LAST:event_Order2BbuttonActionPerformed

    private void Order2AbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Order2AbuttonActionPerformed
        // TODO add your handling code here:
        Integer[] options = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11};
        Integer selectedValue = (Integer) JOptionPane.showInputDialog(null, "How many servings:", "Servings", JOptionPane.QUESTION_MESSAGE, null, options, options[2]);

        if (selectedValue != null) {
            String selectedValueStr = Integer.toString(selectedValue);

            try {
                pst = con.prepareStatement("SELECT * FROM tablesales2 WHERE ID = '2A'");
                ResultSet resultSet = pst.executeQuery();

                DefaultTableModel viewCartTableModel = (DefaultTableModel) viewCartTable.getModel();

                if (resultSet.next()) {
                    String itemName = resultSet.getString("Item Name");
                    String originalPrice = resultSet.getString("Original Price");
                    String discountedPrice = resultSet.getString("Discounted Price");
                    viewCartTableModel.addRow(new Object[]{"2A", itemName, selectedValueStr, originalPrice, discountedPrice});
                    viewCartTableModel.fireTableDataChanged(); // Notify the table about the changes
                    JOptionPane.showMessageDialog(this, "Amount Saved");
                } else {
                    JOptionPane.showMessageDialog(this, "No item with ID '2A' found in the database.");
                }
            } catch (SQLException ex) {
                Logger.getLogger(POSmainwindow.class.getName()).log(Level.SEVERE, null, ex);
                // Add additional error handling or notification logic here
            }
        } else {
            // User canceled or closed the dialog
            // Handle this case if needed
        }
    }//GEN-LAST:event_Order2AbuttonActionPerformed

    private void Order1EbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Order1EbuttonActionPerformed
        // TODO add your handling code here:
        Integer[] options = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11};
        Integer selectedValue = (Integer) JOptionPane.showInputDialog(null, "How many servings:", "Servings", JOptionPane.QUESTION_MESSAGE, null, options, options[2]);

        if (selectedValue != null) {
            String selectedValueStr = Integer.toString(selectedValue);

            try {
                pst = con.prepareStatement("SELECT * FROM tablesales2 WHERE ID = '1E'");
                ResultSet resultSet = pst.executeQuery();

                DefaultTableModel viewCartTableModel = (DefaultTableModel) viewCartTable.getModel();

                if (resultSet.next()) {
                    String itemName = resultSet.getString("Item Name");
                    String originalPrice = resultSet.getString("Original Price");
                    String discountedPrice = resultSet.getString("Discounted Price");
                    viewCartTableModel.addRow(new Object[]{"1E", itemName, selectedValueStr, originalPrice, discountedPrice});
                    viewCartTableModel.fireTableDataChanged(); // Notify the table about the changes
                    JOptionPane.showMessageDialog(this, "Amount Saved");
                } else {
                    JOptionPane.showMessageDialog(this, "No item with ID '1E' found in the database.");
                }
            } catch (SQLException ex) {
                Logger.getLogger(POSmainwindow.class.getName()).log(Level.SEVERE, null, ex);
                // Add additional error handling or notification logic here
            }
        } else {
            // User canceled or closed the dialog
            // Handle this case if needed
        }
    }//GEN-LAST:event_Order1EbuttonActionPerformed

    private void Order1DbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Order1DbuttonActionPerformed
        // TODO add your handling code here:
        Integer[] options = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11};
        Integer selectedValue = (Integer) JOptionPane.showInputDialog(null, "How many servings:", "Servings", JOptionPane.QUESTION_MESSAGE, null, options, options[2]);

        if (selectedValue != null) {
            String selectedValueStr = Integer.toString(selectedValue);

            try {
                pst = con.prepareStatement("SELECT * FROM tablesales2 WHERE ID = '1D'");
                ResultSet resultSet = pst.executeQuery();

                DefaultTableModel viewCartTableModel = (DefaultTableModel) viewCartTable.getModel();

                if (resultSet.next()) {
                    String itemName = resultSet.getString("Item Name");
                    String originalPrice = resultSet.getString("Original Price");
                    String discountedPrice = resultSet.getString("Discounted Price");
                    viewCartTableModel.addRow(new Object[]{"1D", itemName, selectedValueStr, originalPrice, discountedPrice});
                    viewCartTableModel.fireTableDataChanged(); // Notify the table about the changes
                    JOptionPane.showMessageDialog(this, "Amount Saved");
                } else {
                    JOptionPane.showMessageDialog(this, "No item with ID '1D' found in the database.");
                }
            } catch (SQLException ex) {
                Logger.getLogger(POSmainwindow.class.getName()).log(Level.SEVERE, null, ex);
                // Add additional error handling or notification logic here
            }
        } else {
            // User canceled or closed the dialog
            // Handle this case if needed
        }
    }//GEN-LAST:event_Order1DbuttonActionPerformed

    private void Order1CbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Order1CbuttonActionPerformed
        // TODO add your handling code here:

        Integer[] options = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11};
        Integer selectedValue = (Integer) JOptionPane.showInputDialog(null, "How many servings:", "Servings", JOptionPane.QUESTION_MESSAGE, null, options, options[2]);

        if (selectedValue != null) {
            String selectedValueStr = Integer.toString(selectedValue);

            try {
                pst = con.prepareStatement("SELECT * FROM tablesales2 WHERE ID = '1C'");
                ResultSet resultSet = pst.executeQuery();

                DefaultTableModel viewCartTableModel = (DefaultTableModel) viewCartTable.getModel();

                if (resultSet.next()) {
                    String itemName = resultSet.getString("Item Name");
                    String originalPrice = resultSet.getString("Original Price");
                    String discountedPrice = resultSet.getString("Discounted Price");
                    viewCartTableModel.addRow(new Object[]{"1C", itemName, selectedValueStr, originalPrice, discountedPrice});
                    viewCartTableModel.fireTableDataChanged(); // Notify the table about the changes
                    JOptionPane.showMessageDialog(this, "Amount Saved");
                } else {
                    JOptionPane.showMessageDialog(this, "No item with ID '1C' found in the database.");
                }
            } catch (SQLException ex) {
                Logger.getLogger(POSmainwindow.class.getName()).log(Level.SEVERE, null, ex);
                // Add additional error handling or notification logic here
            }
        } else {
            // User canceled or closed the dialog
            // Handle this case if needed
        }
    }//GEN-LAST:event_Order1CbuttonActionPerformed

    private void Order1BbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Order1BbuttonActionPerformed
        // TODO add your handling code here:
        Integer[] options = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11};
        Integer selectedValue = (Integer) JOptionPane.showInputDialog(null, "How many servings:", "Servings", JOptionPane.QUESTION_MESSAGE, null, options, options[2]);

        if (selectedValue != null) {
            String selectedValueStr = Integer.toString(selectedValue);

            try {
                pst = con.prepareStatement("SELECT * FROM tablesales2 WHERE ID = '1B'");
                ResultSet resultSet = pst.executeQuery();

                DefaultTableModel viewCartTableModel = (DefaultTableModel) viewCartTable.getModel();

                if (resultSet.next()) {
                    String itemName = resultSet.getString("Item Name");
                    String originalPrice = resultSet.getString("Original Price");
                    String discountedPrice = resultSet.getString("Discounted Price");
                    viewCartTableModel.addRow(new Object[]{"1B", itemName, selectedValueStr, originalPrice, discountedPrice});
                    viewCartTableModel.fireTableDataChanged(); // Notify the table about the changes
                    JOptionPane.showMessageDialog(this, "Amount Saved");
                } else {
                    JOptionPane.showMessageDialog(this, "No item with ID '1B' found in the database.");
                }
            } catch (SQLException ex) {
                Logger.getLogger(POSmainwindow.class.getName()).log(Level.SEVERE, null, ex);
                // Add additional error handling or notification logic here
            }
        } else {
            // User canceled or closed the dialog
            // Handle this case if needed
        }
    }//GEN-LAST:event_Order1BbuttonActionPerformed

    private void Order1AbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Order1AbuttonActionPerformed
        // TODO add your handling code here:
        Integer[] options = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11};
        Integer selectedValue = (Integer) JOptionPane.showInputDialog(null, "How many servings:", "Servings", JOptionPane.QUESTION_MESSAGE, null, options, options[2]);

        if (selectedValue != null) {
            String selectedValueStr = Integer.toString(selectedValue);

            try {
                pst = con.prepareStatement("SELECT * FROM tablesales2 WHERE ID = '1A'");
                ResultSet resultSet = pst.executeQuery();

                DefaultTableModel viewCartTableModel = (DefaultTableModel) viewCartTable.getModel();

                if (resultSet.next()) {
                    String itemName = resultSet.getString("Item Name");
                    String originalPrice = resultSet.getString("Original Price");
                    String discountedPrice = resultSet.getString("Discounted Price");
                    viewCartTableModel.addRow(new Object[]{"1A", itemName, selectedValueStr, originalPrice, discountedPrice});
                    viewCartTableModel.fireTableDataChanged(); // Notify the table about the changes
                    JOptionPane.showMessageDialog(this, "Amount Saved");
                } else {
                    JOptionPane.showMessageDialog(this, "No item with ID '1A' found in the database.");
                }
            } catch (SQLException ex) {
                Logger.getLogger(POSmainwindow.class.getName()).log(Level.SEVERE, null, ex);
                // Add additional error handling or notification logic here
            }
        } else {
            // User canceled or closed the dialog
            // Handle this case if needed
        }
    }//GEN-LAST:event_Order1AbuttonActionPerformed

    private void Order1AbuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Order1AbuttonMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() > 1){
            JOptionPane.showMessageDialog(null, "You've already Ordered this Product!","Error", JOptionPane.WARNING_MESSAGE);
            Order1Abutton.setEnabled(false);
        }
    }//GEN-LAST:event_Order1AbuttonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(POSmainwindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(POSmainwindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(POSmainwindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(POSmainwindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new POSmainwindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ClearButton;
    private javax.swing.JButton ConfirmOrderButton;
    private javax.swing.JButton LoginButtonAd;
    private javax.swing.JButton Order1Abutton;
    private javax.swing.JButton Order1Bbutton;
    private javax.swing.JButton Order1Cbutton;
    private javax.swing.JButton Order1Dbutton;
    private javax.swing.JButton Order1Ebutton;
    private javax.swing.JButton Order2Abutton;
    private javax.swing.JButton Order2Bbutton;
    private javax.swing.JButton Order2Cbutton;
    private javax.swing.JButton Order2Dbutton;
    private javax.swing.JButton Order3Abutton;
    private javax.swing.JButton Order3Bbutton;
    private javax.swing.JButton Order3Cbutton;
    private javax.swing.JButton Order3Dbutton;
    private javax.swing.JButton Order3Ebutton;
    private javax.swing.JButton Order3Fbutton;
    private javax.swing.JButton Order4Abutton;
    private javax.swing.JButton Order4Bbutton;
    private javax.swing.JPasswordField PasswordAd;
    private javax.swing.JButton RemoveOrderButton;
    private javax.swing.JTabbedPane TabPane;
    private javax.swing.JTextPane UsernameAd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable viewCartTable;
    // End of variables declaration//GEN-END:variables

    private void updateviewCartTableModel() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    private void updateViewCartTableModel() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    
}
